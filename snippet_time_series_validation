import pandas as pd
import numpy as np

from sklearn.model_selection import TimeSeriesSplit
from sklearn.metrics import mean_squared_error

# Criar um conjunto de dados com 100 pontos
data = pd.DataFrame({'data': pd.date_range('2020-01-01', periods=100, freq='D'),
                     'valor': np.random.normal(0, 1, 100)})


# Definir o número de splits (divisões) a serem feitos
n_splits = 5

# Definir o objeto TimeSeriesSplit
tscv = TimeSeriesSplit(n_splits=n_splits)

# Definir a métrica de validação como o MSE
scoring = 'neg_mean_squared_error'

# Criar uma lista para armazenar os resultados
mse_scores = []

# Loop sobre cada split
for train_index, test_index in tscv.split(data):
    # Dividir os dados em treino e teste
    train_data = data.iloc[train_index]
    test_data = data.iloc[test_index]
    
    # Ajustar o modelo aos dados de treino
    # Aqui, estamos usando um modelo simples que apenas prevê o valor do dia anterior
    predictions = train_data['valor'].shift(1).iloc[1:]
    actual_values = train_data['valor'].iloc[1:]
    
    # Calcular o MSE
    mse = mean_squared_error(actual_values, predictions)
    mse_scores.append(mse)

# Printar os resultados
print('MSE scores: ', mse_scores)
print('Média do MSE: ', np.mean(mse_scores))    
